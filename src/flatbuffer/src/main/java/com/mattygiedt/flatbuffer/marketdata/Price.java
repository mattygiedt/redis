// automatically generated by the FlatBuffers compiler, do not modify

package com.mattygiedt.flatbuffer.marketdata;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class Price extends Struct {
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public Price __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public double value() { return bb.getDouble(bb_pos + 0); }
  public void mutateValue(double value) { bb.putDouble(bb_pos + 0, value); }

  public static int createPrice(FlatBufferBuilder builder, double value) {
    builder.prep(8, 8);
    builder.putDouble(value);
    return builder.offset();
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public Price get(int j) { return get(new Price(), j); }
    public Price get(Price obj, int j) {  return obj.__assign(__element(j), bb); }
  }
}

